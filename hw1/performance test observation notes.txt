Performance Testing Results

Total requests: 485
Average response time: 61.86ms
Median response time: 61.17ms
95th percentile: 71.19ms
99th percentile: 87.32ms
Max response time: 132.06ms

1. Distribution Analysis
The histogram reveals a tight normal distribution rather than the expected "long tail" pattern common in web services. Only 1% of requests exceeded 87ms, indicating exceptionally consistent performance for a basic t2.micro instance.

2. Performance Consistency
The scatter plot shows remarkable stability throughout the 30-second test window with no performance degradation over time. The P95/P50 ratio of 1.16x indicates very low variability - most production systems see 2-5x ratios.

3. Infrastructure Observations
The t2.micro instance handled sequential load well with minimal resource contention. The single 132ms outlier (0.2% of requests) suggests shared infrastructure had negligible impact during testing.

4. Network Latency vs Processing Time Analysis
The response times appear to be dominated by network latency rather than server processing time. Given the geographic distance between the client (local machine) and server (AWS Oregon), an estimated 45-50ms of the total response time can be attributed to network travel time, leaving approximately 10-15ms for actual server processing.

5. Scaling Limitations
While sequential performance is solid, this setup would struggle with concurrent load. The single-threaded Go server would likely see response times jump to 200-500ms with queuing delays under realistic concurrent user scenarios.

Conclusion
The current setup delivers satisfactory performance for low-concurrency scenarios but would require architectural enhancements (load balancing, horizontal scaling) for production deployment with concurrent user loads.
